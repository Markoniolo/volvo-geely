{"version":3,"sources":["scripts/helpers.js","scripts/config.js","scripts/scripts.js","scripts/contacts.js","scripts/scroll-to-anchor.js","scripts/header.js","scripts/form-validate.js","scripts/header-nav-link.js","scripts/reviews-video.js","main.js"],"names":[],"mappings":"AAAA;ACAA;AACA;AACA;AACA;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACrCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACpEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AC/BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACNA","file":"main.js","sourcesContent":["","const APP = {\n\tname: 'iBrush HTML Starter'\n};\n","$(() => {\n    svg4everybody()\n\n    $('.about__slider').slick({\n        infinite: false,\n        variableWidth: true,\n        slidesToShow: 2,\n        prevArrow: $('.about__nav-btn_left'),\n        nextArrow: $('.about__nav-btn_right'),\n        responsive: [\n            {\n                breakpoint: 767,\n                settings: {\n                    slidesToShow: 1,\n                },\n            },\n        ]\n    })\n\n    $('.reviews__slider').slick({\n        infinite: false,\n        variableWidth: true,\n        prevArrow: $('.reviews__nav-btn_left'),\n        nextArrow: $('.reviews__nav-btn_right'),\n    })\n\n    Fancybox.bind(\"[data-fancybox]\", {\n        // Your custom options\n    });\n})\n","const contacts = document.querySelector('[data-element=\"contacts\"]')\nconst contactsBoxes = document.querySelectorAll('[data-element=\"contacts__box\"]')\nlet mapItemArray\n\nif (contacts) contactsMapInit()\n\nfunction contactsMapInit() {\n    mapItemArray = contacts.querySelectorAll('[data-element=\"contacts__item\"]')\n    for (let i = 0; i < mapItemArray.length; i++) {\n        mapItemArray[i].addEventListener('click', toggleMap)\n    }\n    loadMap()\n}\n\nfunction loadMap() {\n    const mapScript = document.createElement('script')\n\n    mapScript.src = 'https://api-maps.yandex.ru/2.1/?lang=ru_RU'\n    document.body.appendChild(mapScript)\n\n    mapScript.addEventListener('load', function () {\n        ymaps.ready(initAllMaps)\n    })\n}\n\nfunction initAllMaps () {\n    const maps = contacts.querySelectorAll('.contacts__map')\n    for (let i = 0; i < maps.length; i++) {\n        initMap(maps[i], i)\n    }\n}\n\nfunction toggleMap () {\n    if (this.classList.contains('contacts__item_active')) return\n    const oldActive = contacts.querySelector('.contacts__item_active')\n    if (oldActive) oldActive.classList.remove('contacts__item_active')\n    this.classList.add('contacts__item_active')\n    const oldActiveBox = contacts.querySelector('.contacts__box_active')\n    if (oldActiveBox) oldActiveBox.classList.remove('contacts__box_active')\n    const index = this.getAttribute('data-index')\n    contactsBoxes[index].classList.add('contacts__box_active')\n}\n\nfunction initMap(map, index) {\n    const centerMap = map.getAttribute('data-coords-center')\n    contactMapInit()\n\n    function contactMapInit() {\n        let myMap\n        const zoom = 13\n        myMap = new ymaps.Map(`contacts__map-${index+1}`, {\n            center: JSON.parse(centerMap),\n            zoom: zoom\n        })\n\n        const MyIconContentLayout = ymaps.templateLayoutFactory.createClass(\n            '<div class=\"placemark-caption\">$[properties.iconContent]</div>'\n        )\n\n        createPlacemark(mapItemArray[index])\n        mapItemArray[index].addEventListener(\"click\", setMapCenter)\n\n        function createPlacemark(item) {\n            const coords = JSON.parse(item.getAttribute('data-coords'))\n            const caption = item.getAttribute('data-map-caption')\n            const placemark = new ymaps.Placemark(coords, {\n                iconCaption: caption,\n                iconContent: caption\n            }, {\n                iconLayout: 'default#imageWithContent',\n                iconImageHref: 'assets/img/placemark.svg',\n                iconImageSize: window.innerWidth > 1280 ? [34, 46] : [27, 37],\n                iconImageOffset: window.innerWidth > 1280 ? [-17, -23] : [-23, -18],\n                iconContentLayout: MyIconContentLayout\n            })\n            myMap.geoObjects.add(placemark)\n        }\n\n        function setMapCenter() {\n            const centerCoords = JSON.parse(this.getAttribute(\"data-coords\"))\n            myMap.setCenter(centerCoords)\n        }\n    }\n}\n","let indent = 80\n\nif (document.querySelector('[data-role=\"scroll-to-anchor\"]')) initScrollToAnchor()\n\nfunction initScrollToAnchor() {\n    const anchorElements = document.querySelectorAll('[data-role=\"scroll-to-anchor\"]')\n\n    for (let i = 0, len = anchorElements.length; i < len; i++) _loopAddEventScrollToAnchor(anchorElements[i])\n\n    function _loopAddEventScrollToAnchor(node) {\n        node.addEventListener('click', clickOnTheScrollElement)\n    }\n\n    window.addEventListener('resize', checkIndent)\n    checkIndent()\n}\n\nfunction checkIndent() {\n    indent = window.innerWidth < 1280 ? 60 : 80\n}\n\nfunction clickOnTheScrollElement(event) {\n    event.preventDefault()\n    if (this.classList.contains('mobile-menu__link')) closeMenu()\n    let elementId\n    if (this.dataset.link) elementId = this.dataset.link.substr(1)\n    else elementId = this.hash.substr(1)\n    const element = document.getElementById(elementId)\n    if (element) animateScrollToAnchor(element)\n}\n\nfunction animateScrollToAnchor(theElement) {\n    const positionNow = window.pageYOffset\n    const positionElement = theElement.getBoundingClientRect().top + pageYOffset - indent\n    const duration = 300\n    const step = positionElement - positionNow\n    const start = performance.now()\n\n    requestAnimationFrame(function animate(time) {\n        const timePassed = time - start\n\n        if (timePassed > duration) {\n            window.scrollTo(0, positionElement)\n        } else {\n            window.scrollTo(0, positionNow + step * (timePassed / duration))\n            requestAnimationFrame(animate)\n        }\n    })\n}\n","const header = document.querySelector('[data-element=\"header\"]')\nconst menuCloseBtn = document.querySelector('[data-element=\"mobile-menu-close\"]')\nconst menuOpenBtn = document.querySelector('[data-element=\"mobile-menu-open\"]')\nconst menu = document.querySelector('[data-element=\"mobile-menu\"]')\nconst html = document.getElementsByTagName('html')[0]\n\nif (header && menuCloseBtn && menuOpenBtn && menu) headerInit()\n\nlet currentScrollPosition\n\nfunction headerInit () {\n    window.addEventListener('scroll', checkScroll)\n    if (header.getBoundingClientRect().top + pageYOffset !== 16 && header.getBoundingClientRect().top + pageYOffset !== 20) checkScroll()\n    menuCloseBtn.addEventListener('click', closeMenu)\n    menuOpenBtn.addEventListener('click', openMenu)\n}\n\nfunction closeMenu () {\n    html.classList.remove('html_no-scroll')\n    menu.classList.remove('mobile-menu_active')\n    window.scrollTo(0, currentScrollPosition)\n}\n\nfunction openMenu () {\n    currentScrollPosition = pageYOffset\n    html.classList.add('html_no-scroll')\n    menu.classList.add('mobile-menu_active')\n}\n\nfunction checkScroll () {\n    const topPosition = header.getBoundingClientRect().top + pageYOffset\n    if (topPosition > 0) {\n        header.classList.add('header_scroll')\n    } else {\n        header.classList.remove('header_scroll')\n    }\n}\n","const forms = document.querySelectorAll('[data-role=\"form-validate\"]')\n\nfor (let i = 0; i < forms.length; i++) {\n    formInit(forms[i])\n}\n\nfunction formInit (form) {\n    const phone = form.querySelector('[data-role=\"form-input-phone\"]')\n    const name = form.querySelector('[data-role=\"form-input-name\"]')\n\n    phone.addEventListener('input', removeError)\n    form.addEventListener('submit', validate)\n\n    const maskPhone = new IMask(phone, { mask: '+{7} (000) 000-00-00' });\n    const maskName = new IMask(name, { mask: /^[А-ЯЁa-zA-Z\\s]+$/i });\n\n    function removeError () {\n        this.classList.remove('input-error')\n    }\n\n    function validate (e) {\n        e.preventDefault()\n        if (maskPhone.unmaskedValue.length < 11) {\n            phone.classList.add('input-error')\n        } else {\n            fetchForm()\n        }\n    }\n\n    async function fetchForm () {\n        const url = form.getAttribute('action')\n        fetch(url, {\n            method: 'post',\n            body: new FormData(form),\n        })\n            .then(res => { return res.json() })\n            .then(data => { success() })\n            .catch(() => {\n                console.log('error')\n            })\n\n        success()\n\n        function success () {\n            console.log('success')\n            closeModalForm(form)\n            openThanks()\n            phone.value = ''\n            name.value = ''\n        }\n    }\n}\n\nfunction closeModalForm (node) {\n    const fancyboxContent = node.closest('.fancybox__content')\n    if (fancyboxContent) {\n        const closeBtn = fancyboxContent.querySelector('.is-close-btn')\n        closeBtn.click()\n    }\n}\n\nfunction openThanks () {\n    const thanksOpen = document.querySelector('[data-element=\"modal-thanks-open\"]')\n    thanksOpen.click()\n}\n\nconst modalThanksButton = document.querySelector('[data-element=\"modal-thanks-button\"]')\nmodalThanksButton.addEventListener('click', () => closeModalForm(modalThanksButton))\n","const navLinks = document.querySelectorAll('[data-element=\"header-nav-link\"]')\nconst anchorSections = document.querySelectorAll('[data-role=\"anchor-section\"]')\n\nif (anchorSections.length && navLinks.length) navLinksInit()\n\nfunction navLinksInit () {\n    window.addEventListener('scroll', checkNav)\n    checkNav()\n}\n\nfunction checkNav () {\n    let isActiveLinkExist = false\n    for (let i = anchorSections.length - 1; i >= 0; i--) {\n        const position = window.pageYOffset + anchorSections[i].getBoundingClientRect().top\n        const currentScroll = window.pageYOffset\n        if (position - 120 - currentScroll < 0) {\n            removeOldActiveNavLink()\n            navLinks[i].classList.add('header__nav-link_active')\n            isActiveLinkExist = true\n            return\n        }\n    }\n    if (!isActiveLinkExist) {\n        removeOldActiveNavLink()\n    }\n}\n\nfunction removeOldActiveNavLink () {\n    const oldActiveLink = document.querySelector('.header__nav-link_active')\n    if (oldActiveLink) oldActiveLink.classList.remove('header__nav-link_active')\n}\n","const videoBoxes = document.querySelectorAll('[data-element=\"review-video-container\"]')\nconst countAllArray = document.querySelectorAll('[data-element=\"reviews__count-all\"]')\n\nfor (let i = 0; i < videoBoxes.length; i++) {\n    videoBoxInit(videoBoxes[i])\n}\n\nfor (let i = 0; i < countAllArray.length; i++) {\n    countAllArray[i].innerHTML = countAllArray.length\n}\n\nfunction videoBoxInit (videoBox) {\n    const video = videoBox.getElementsByTagName('video')[0]\n}\n","//=require scripts/helpers.js\n//=require scripts/config.js\n//=require scripts/scripts.js\n//=require scripts/contacts.js\n//=require scripts/scroll-to-anchor.js\n//=require scripts/header.js\n//=require scripts/form-validate.js\n//=require scripts/header-nav-link.js\n//=require scripts/reviews-video.js\n"]}